// Generated by CoffeeScript 1.4.0
(function() {
  var CogAnimation, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  if ((_ref = window.Amoeba) == null) {
    window.Amoeba = {};
  }

  Amoeba.CogDemo = (function() {

    function CogDemo(divHolder, size, numSegments) {
      var _this = this;
      this.size = size;
      this.numSegments = numSegments;
      this._start = __bind(this._start, this);

      this._createAnimations = __bind(this._createAnimations, this);

      this.graphicsPaper = new Amoeba.GraphicsPaper(divHolder);
      Amoeba.oneText = $("#one");
      Amoeba.twoText = $("#two");
      Amoeba.threeText = $("#three");
      Amoeba.fourText = $("#four");
      this.cog = new Amoeba.Cog(this.size, this.numSegments, this.graphicsPaper);
      Amoeba.oneText.val(this.cog.path(true));
      Amoeba.twoText.val(this.cog.path(false));
      Amoeba.threeText.val(Amoeba.Graphics.circleWithFourPoints(0, 0, this.size / 2));
      Amoeba.fourText.val(Amoeba.Graphics.rectWithFourPoints(0, 0, 100, 300));
      this._createAnimations();
      $("#run").on("click", function(event) {
        return _this._start();
      });
      $("#showPoints").on("click", function(event) {
        return _this.cog.showPoints();
      });
      $("#hidePoints").on("click", function(event) {
        return _this.graphicsPaper.clearPoints();
      });
      $("#pulsatePoints").on("click", function(event) {
        return _this.graphicsPaper.pulsatePoints();
      });
      this._start();
    }

    CogDemo.prototype._createAnimations = function() {
      var one, _i, _len, _ref1;
      if (this.animations != null) {
        _ref1 = this.animations;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          one = _ref1[_i];
          one.remove();
        }
      }
      return this.animations = [new CogAnimation(Raphael.getColor(), 0, this.graphicsPaper), new CogAnimation(Raphael.getColor(), 1, this.graphicsPaper), new CogAnimation(Raphael.getColor(), 2, this.graphicsPaper), new CogAnimation(Raphael.getColor(), 3, this.graphicsPaper), new CogAnimation(Raphael.getColor(), 4, this.graphicsPaper)];
    };

    CogDemo.prototype._start = function() {
      var one, _i, _len, _ref1, _results;
      if (this.animations != null) {
        _ref1 = this.animations;
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          one = _ref1[_i];
          _results.push(one.start());
        }
        return _results;
      }
    };

    return CogDemo;

  })();

  CogAnimation = (function() {

    function CogAnimation(fillColor, index, graphicsPaper) {
      var _this = this;
      this.fillColor = fillColor;
      this.index = index;
      this.pathSwitch = true;
      this.removed = false;
      this.mainPath = graphicsPaper.paper.path(this.pathOne()).attr({
        fill: this.fillColor,
        "fill-opacity": 0,
        transform: "t" + (graphicsPaper.width()) + ",0"
      });
      this.mainPath.node.onclick = function() {
        _this.animate();
        return _this.mainPath.toFront();
      };
    }

    CogAnimation.prototype.remove = function() {
      var _this = this;
      this.removed = true;
      return this.mainPath.animate({
        "fill-opacity": 0
      }, 400, "<>", function() {
        return _this.mainPath.remove();
      });
    };

    CogAnimation.prototype.start = function() {
      var _this = this;
      return setTimeout(function() {
        return _this._doStart();
      }, 100 * this.index);
    };

    CogAnimation.prototype._doStart = function() {
      var _this = this;
      this.mainPath.stop();
      return this.mainPath.animate({
        "fill-opacity": 1,
        transform: "t0,0"
      }, 600, "<>", function() {
        return _this.rotate();
      });
    };

    CogAnimation.prototype.rotate = function() {
      var _this = this;
      return this.mainPath.animate({
        transform: "r0"
      }, 0, "<>", function() {
        return _this.mainPath.animate({
          transform: "r360"
        }, 1800, "<>", function() {
          return _this.changeToPathTwo();
        });
      });
    };

    CogAnimation.prototype.changeToPathTwo = function() {
      var _this = this;
      return this.mainPath.animate({
        path: this.pathTwo(),
        fill: this.fillColor
      }, 800, "<>", function() {
        return _this.changeToPathThree();
      });
    };

    CogAnimation.prototype.changeToPathThree = function() {
      var _this = this;
      return this.mainPath.animate({
        path: this.pathThree()
      }, 0, "", function() {
        return _this.changeToPathFour();
      });
    };

    CogAnimation.prototype.changeToPathFour = function() {
      var _this = this;
      return this.mainPath.animate({
        path: this.pathFour(),
        fill: this.fillColor
      }, 800, "<>", function() {
        return console.log("cunt");
      });
    };

    CogAnimation.prototype.pathOne = function() {
      var result;
      result = Amoeba.oneText.val();
      result = Amoeba.Graphics.normalizePath(result);
      result = Amoeba.Graphics.translatePath(result, this.index * 120, 0);
      return result;
    };

    CogAnimation.prototype.pathTwo = function() {
      var result;
      result = Amoeba.twoText.val();
      result = Amoeba.Graphics.normalizePath(result);
      result = Amoeba.Graphics.translatePath(result, 100 + this.index * 220, 120);
      return result;
    };

    CogAnimation.prototype.pathThree = function() {
      var result;
      result = Amoeba.threeText.val();
      result = Amoeba.Graphics.normalizePath(result);
      result = Amoeba.Graphics.translatePath(result, 100 + this.index * 220, 120);
      return result;
    };

    CogAnimation.prototype.pathFour = function() {
      var result;
      result = Amoeba.fourText.val();
      result = Amoeba.Graphics.normalizePath(result);
      result = Amoeba.Graphics.scalePath(result, .5, .5 + .3 * this.index);
      result = Amoeba.Graphics.translatePath(result, 300 + this.index * 50, 220);
      return result;
    };

    return CogAnimation;

  })();

}).call(this);
