// Generated by CoffeeScript 1.4.0
(function() {
  var CogAnimation, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  if ((_ref = window.Amoeba) == null) {
    window.Amoeba = {};
  }

  Amoeba.CogDemo = (function() {

    function CogDemo(divHolder, size, numSegments) {
      var theCog,
        _this = this;
      this.size = size;
      this.numSegments = numSegments;
      this._createAnimations = __bind(this._createAnimations, this);

      this.graphicsPaper = new Amoeba.GraphicsPaper(divHolder);
      Amoeba.oneText = $("#one");
      Amoeba.twoText = $("#two");
      theCog = new Amoeba.Cog(this.size, this.numSegments, this.graphicsPaper);
      Amoeba.oneText.val(theCog.path(true));
      Amoeba.twoText.val(theCog.path(false));
      this._createAnimations();
      $("#run").on("click", function(event) {
        return _this.doAnimate();
      });
    }

    CogDemo.prototype.doAnimate = function() {
      return this.animations.forEach(function(el) {
        return el.animate();
      });
    };

    CogDemo.prototype._createAnimations = function() {
      var num, _i, _len, _ref1;
      if (this.animations != null) {
        _ref1 = this.animations;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          num = _ref1[_i];
          num.remove();
        }
      }
      return this.animations = [new CogAnimation("#44f", 0, this.graphicsPaper)];
    };

    return CogDemo;

  })();

  CogAnimation = (function() {

    function CogAnimation(fillColor, offset, graphicsPaper) {
      var _this = this;
      this.fillColor = fillColor;
      this.offset = offset;
      this.pathSwitch = true;
      this.removed = false;
      this.mainPath = graphicsPaper.paper.path(this.pathOne(this.offset)).attr({
        fill: this.fillColor
      });
      this.mainPath.node.onclick = function() {
        _this.animate();
        return _this.mainPath.toFront();
      };
    }

    CogAnimation.prototype.remove = function() {
      var _this = this;
      this.removed = true;
      return this.mainPath.animate({
        "fill-opacity": 0
      }, 400, "<>", function() {
        return _this.mainPath.remove();
      });
    };

    CogAnimation.prototype.animate = function() {
      var thePath,
        _this = this;
      if (+(this.pathSwitch = !this.pathSwitch)) {
        thePath = this.pathOne(this.offset);
      } else {
        thePath = this.pathTwo(this.offset);
      }
      this.mainPath.stop();
      return this.mainPath.animate({
        path: thePath,
        fill: this.fillColor,
        'fill-opacity': 0.4
      }, 800, "<>", function() {
        if (jQuery('#repeatCheck').is(':checked')) {
          if (!_this.removed) {
            return _this.animate();
          }
        }
      });
    };

    CogAnimation.prototype.pathOne = function(offset) {
      var result;
      result = Amoeba.oneText.val();
      result = Amoeba.Graphics.normalizePath(result);
      return result;
    };

    CogAnimation.prototype.pathTwo = function(offset) {
      var result;
      result = Amoeba.twoText.val();
      result = Amoeba.Graphics.normalizePath(result);
      return result;
    };

    return CogAnimation;

  })();

}).call(this);
