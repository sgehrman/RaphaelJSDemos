// Generated by CoffeeScript 1.4.0
(function() {
  var PathAnimation, _ref;

  if ((_ref = window.Amoeba) == null) {
    window.Amoeba = {};
  }

  Amoeba.Animations = (function() {

    function Animations() {
      this.setupPathFields();
      this.setupAnimations();
      this.setupEventHandlers();
    }

    Animations.prototype.setupAnimations = function() {
      var paper;
      paper = Raphael(0, 280, 850, 650);
      paper.rect(0, 0, 850, 650).attr({
        fill: "90-#aaf-#004",
        stroke: "#f99",
        title: "background"
      });
      return this.animations = [new PathAnimation(paper, "#44f", 0), new PathAnimation(paper, "#f32", 420)];
    };

    Animations.prototype.doAnimate = function() {
      return this.animations.forEach(function(el) {
        return el.animate();
      });
    };

    Animations.prototype.setupPathFields = function() {
      Amoeba.oneText = $("#one");
      Amoeba.twoText = $("#two");
      Amoeba.oneText.val(gearPath);
      return Amoeba.twoText.val(circleGearPath);
    };

    Animations.prototype.setupEventHandlers = function() {
      var _this = this;
      $("#gears").on("click", function(event) {
        Amoeba.oneText.val(gearPath);
        Amoeba.twoText.val(circleGearPath);
        return _this.doAnimate();
      });
      $("#rects").on("click", function(event) {
        Amoeba.oneText.val(makeRectanglePath(0, 0, 100, 500));
        Amoeba.twoText.val(makeRectanglePath(0, 0, 200, 300));
        return _this.doAnimate();
      });
      return $("#run").on("click", function(event) {
        return _this.doAnimate();
      });
    };

    return Animations;

  })();

  PathAnimation = (function() {

    function PathAnimation(paper, fillColor, offset) {
      var _this = this;
      this.fillColor = fillColor;
      this.offset = offset;
      this.pathSwitch = true;
      this.mainPath = paper.path(this.pathOne(this.offset)).attr({
        fill: this.fillColor
      });
      this.mainPath.node.onclick = function() {
        _this.animate();
        return _this.mainPath.toFront();
      };
    }

    PathAnimation.prototype.animate = function() {
      var thePath;
      if (+(this.pathSwitch = !this.pathSwitch)) {
        thePath = this.pathOne(this.offset);
      } else {
        thePath = this.pathTwo(this.offset);
      }
      return this.mainPath.animate({
        path: thePath,
        fill: this.fillColor
      }, 400, "<>");
    };

    PathAnimation.prototype.pathOne = function(offset) {
      var result;
      result = Amoeba.oneText.val();
      result = normalizePath(result);
      result = translatePath(result, offset, 0);
      return result;
    };

    PathAnimation.prototype.pathTwo = function(offset) {
      var result;
      result = Amoeba.twoText.val();
      result = normalizePath(result);
      result = translatePath(result, offset, 0);
      return result;
    };

    return PathAnimation;

  })();

}).call(this);
